(()=>{var e={};e.id=464,e.ids=[464],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},87216:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>T,routeModule:()=>y,serverHooks:()=>h,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>f});var s={};r.r(s),r.d(s,{GET:()=>O,POST:()=>g});var a=r(58912),n=r(86261),i=r(70724),o=r(1625),c=r(68224);class u{static async getEvents(e={}){let{search:t,category:r,location:s,organizerId:a,limit:n=20,offset:i=0}=e;return await c.z.event.findMany({where:{...a&&{organizerId:a},...r&&{category:r},...s&&{location:{contains:s,mode:"insensitive"}},...t&&{OR:[{title:{contains:t,mode:"insensitive"}},{description:{contains:t,mode:"insensitive"}}]},date:{gte:new Date}},include:{organizer:{select:{id:!0,name:!0,email:!0}},ticketTypes:!0,_count:{select:{reviews:!0,transactions:!0}}},orderBy:{date:"asc"},take:n,skip:i})}static async getEventById(e){return await c.z.event.findUnique({where:{id:e},include:{organizer:{select:{id:!0,name:!0,email:!0}},ticketTypes:!0,_count:{select:{reviews:!0,transactions:!0}}}})}static async createEvent(e){let{ticketTypes:t,...r}=e;return await c.z.event.create({data:{...r,ticketTypes:{create:t}},include:{organizer:{select:{id:!0,name:!0,email:!0}},ticketTypes:!0,_count:{select:{reviews:!0,transactions:!0}}}})}static async getUserByEmail(e){return await c.z.user.findUnique({where:{email:e}})}static async createUser(e){return await c.z.user.create({data:e})}static async createTransaction(e){return await c.z.transaction.create({data:{...e,discountAmount:0,pointsValue:0,status:"WAITING_PAYMENT"}})}static async updateTransactionStatus(e,t,r){return await c.z.transaction.update({where:{id:e},data:{status:t,...r&&{paymentProofUrl:r}}})}static async getUserTransactions(e){return await c.z.transaction.findMany({where:{userId:e},include:{event:{select:{id:!0,title:!0,date:!0,location:!0}},user:{select:{id:!0,name:!0,email:!0}}},orderBy:{createdAt:"desc"}})}static async getOrganizerTransactions(e){return await c.z.transaction.findMany({where:{event:{organizerId:e}},include:{event:{select:{id:!0,title:!0,date:!0,location:!0}},user:{select:{id:!0,name:!0,email:!0}}},orderBy:{createdAt:"desc"}})}static async addPointsToUser(e,t,r,s){await c.z.$transaction(async a=>{await a.user.update({where:{id:e},data:{pointsBalance:{increment:t}}}),await a.point.create({data:{userId:e,amount:t,type:r,description:s,expiresAt:new Date(Date.now()+7776e6)}})})}static async usePoints(e,t){try{return await c.z.user.update({where:{id:e,pointsBalance:{gte:t}},data:{pointsBalance:{decrement:t}}}),!0}catch{return!1}}}var d=r(16049),l=function(e){return e.NETWORK_ERROR="NETWORK_ERROR",e.VALIDATION_ERROR="VALIDATION_ERROR",e.AUTHENTICATION_ERROR="AUTHENTICATION_ERROR",e.AUTHORIZATION_ERROR="AUTHORIZATION_ERROR",e.NOT_FOUND_ERROR="NOT_FOUND_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.DATABASE_ERROR="DATABASE_ERROR",e.PAYMENT_ERROR="PAYMENT_ERROR",e}({});class R extends Error{constructor(e,t="SERVER_ERROR",r=500){super(e),this.name="AppError",this.type=t,this.statusCode=r,this.isOperational=!0,this.timestamp=new Date,Error.captureStackTrace(this,this.constructor)}}class p{static handleApiError(e){if(console.error("API Error:",e),!e.response)return d.default.error("Connection failed. Please check your internet connection."),{success:!1,error:{type:"NETWORK_ERROR",message:"Network connection failed"},timestamp:new Date().toISOString()};let{status:t,data:r}=e.response;switch(t){case 400:return d.default.error(r?.error?.message||"Invalid request"),{success:!1,error:{type:"VALIDATION_ERROR",message:r?.error?.message||"Validation failed",details:r?.error?.details},timestamp:new Date().toISOString()};case 401:return d.default.error("Please sign in to continue"),window.location.href="/signin",{success:!1,error:{type:"AUTHENTICATION_ERROR",message:"Authentication required"},timestamp:new Date().toISOString()};case 403:return d.default.error("You don't have permission to perform this action"),{success:!1,error:{type:"AUTHORIZATION_ERROR",message:"Insufficient permissions"},timestamp:new Date().toISOString()};case 404:return d.default.error("The requested resource was not found"),{success:!1,error:{type:"NOT_FOUND_ERROR",message:"Resource not found"},timestamp:new Date().toISOString()};default:return d.default.error("Something went wrong on our end. Please try again later."),{success:!1,error:{type:"SERVER_ERROR",message:"Internal server error"},timestamp:new Date().toISOString()}}}static handleValidationError(e){let t=Object.values(e);1===t.length?d.default.error(t[0]):d.default.error(`Please fix the following errors:
${t.join("\n")}`)}static handleDatabaseError(e){return(console.error("Database error:",e),"P2002"===e.code)?new R("A record with this information already exists","DATABASE_ERROR",400):"P2025"===e.code?new R("The record you're trying to access doesn't exist","NOT_FOUND_ERROR",404):"P1001"===e.code?new R("Database connection failed","DATABASE_ERROR",503):new R("Database operation failed","DATABASE_ERROR",500)}static handlePaymentError(e){console.error("Payment error:",e),"insufficient_funds"===e.type?d.default.error("Insufficient balance. Please check your payment method."):"payment_expired"===e.type?d.default.error("Payment window has expired. Please try booking again."):"payment_rejected"===e.type?d.default.error("Payment was rejected. Please contact support if this continues."):d.default.error("Payment processing failed. Please try again.")}static createSuccessResponse(e,t){return{success:!0,data:e,timestamp:new Date().toISOString()}}static createErrorResponse(e,t,r=500,s){return{success:!1,error:{type:e,message:t,details:s},timestamp:new Date().toISOString()}}static logError(e,t){e.message,e.stack,e.name,new Date().toISOString(),"undefined"!=typeof navigator&&navigator.userAgent}}function m(e){return async(...t)=>{try{return await e(...t)}catch(e){return function(e){if(console.error("API Error:",e),e.code&&e.code.startsWith("P")){let t=p.handleDatabaseError(e);return o.NextResponse.json(p.createErrorResponse(t.type,t.message,t.statusCode),{status:t.statusCode})}return"ValidationError"===e.name||e.issues?o.NextResponse.json(p.createErrorResponse(l.VALIDATION_ERROR,"Validation failed",400,e.issues||e.details),{status:400}):e.message?.includes("Unauthorized")||401===e.status?o.NextResponse.json(p.createErrorResponse(l.AUTHENTICATION_ERROR,"Authentication required",401),{status:401}):e.message?.includes("Forbidden")||403===e.status?o.NextResponse.json(p.createErrorResponse(l.AUTHORIZATION_ERROR,"Insufficient permissions",403),{status:403}):e.message?.includes("Not found")||404===e.status?o.NextResponse.json(p.createErrorResponse(l.NOT_FOUND_ERROR,"Resource not found",404),{status:404}):(p.logError(e),o.NextResponse.json(p.createErrorResponse(l.SERVER_ERROR,"Internal server error",500,void 0),{status:500}))}(e)}}}function E(e,t,r=200){return o.NextResponse.json(p.createSuccessResponse(e,t),{status:r})}let O=m(async e=>{console.log("Testing database connection...");let t=await u.getEvents({limit:5});return E({eventsCount:t.length,events:t},"Database connection successful!")}),g=m(async e=>{let t=await e.json(),r=function(e,t){let r=[];for(let s of t)e[s]||r.push(`${s} is required`);return r}(t,["organizerId"]);return r.length>0?o.NextResponse.json({success:!1,error:{type:"VALIDATION_ERROR",message:"Validation failed",details:r},timestamp:new Date().toISOString()},{status:400}):E(await u.createEvent({title:t.title||"Test Event",description:"This is a test event created via API",fullDescription:"A longer description of the test event",date:new Date(t.date||"2024-12-31"),time:"19:00",location:"Test Location",category:"Technology",image:"https://via.placeholder.com/800x400",capacity:100,price:5e4,organizerId:t.organizerId,ticketTypes:[{name:"General Admission",price:5e4,quantity:80,description:"Standard entry"},{name:"VIP",price:1e5,quantity:20,description:"VIP access with premium benefits"}]}),"Test event created successfully!",201)}),y=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/events/test/route",pathname:"/api/events/test",filename:"route",bundlePath:"app/api/events/test/route"},resolvedPagePath:"/Users/muhammadghally/Documents/eventhub-beta/eventhub-beta/app/api/events/test/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:w,workUnitAsyncStorage:f,serverHooks:h}=y;function T(){return(0,i.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:f})}},4587:(e,t,r)=>{Promise.resolve().then(r.bind(r,16049))},64259:(e,t,r)=>{Promise.resolve().then(r.bind(r,26542))},68224:(e,t,r)=>{"use strict";r.d(t,{z:()=>a});var s=r(96330);let a=globalThis.prisma??new s.PrismaClient({log:["error"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[724,648,624],()=>r(87216));module.exports=s})();