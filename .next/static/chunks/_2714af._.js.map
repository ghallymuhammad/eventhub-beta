{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/muhammadghally/Documents/eventhub-beta/eventhub-beta/components/ProtectedRoute.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\n\ninterface User {\n  email: string;\n  role: string;\n  name: string;\n  isAuthenticated: boolean;\n}\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  allowedRoles: string[];\n  redirectTo?: string;\n}\n\nexport default function ProtectedRoute({ \n  children, \n  allowedRoles, \n  redirectTo = '/signin' \n}: ProtectedRouteProps) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n    \n    if (!userData) {\n      // No user data, redirect to sign in\n      router.push(redirectTo);\n      return;\n    }\n\n    try {\n      const parsedUser = JSON.parse(userData) as User;\n      \n      if (!parsedUser.isAuthenticated || !allowedRoles.includes(parsedUser.role)) {\n        // User not authenticated or doesn't have required role\n        router.push(redirectTo);\n        return;\n      }\n\n      setUser(parsedUser);\n    } catch (error) {\n      // Invalid user data, redirect to sign in\n      localStorage.removeItem('user');\n      router.push(redirectTo);\n      return;\n    }\n    \n    setIsLoading(false);\n  }, [router, allowedRoles, redirectTo]);\n\n  // Show loading spinner while checking authentication\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show access denied if user doesn't have permission\n  if (!user || !allowedRoles.includes(user.role)) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto px-4\">\n          <div className=\"text-6xl mb-4\">🔒</div>\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Access Denied</h1>\n          <p className=\"text-gray-600 mb-6\">\n            You don't have permission to access this page. Please sign in with the appropriate account type.\n          </p>\n          <div className=\"space-y-2\">\n            <button\n              onClick={() => router.push('/signin')}\n              className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Sign In\n            </button>\n            <button\n              onClick={() => router.push('/')}\n              className=\"w-full px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n            >\n              Go to Homepage\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // User has access, render the protected content\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAkBe,SAAS,eAAe,EACrC,QAAQ,EACR,YAAY,EACZ,aAAa,SAAS,EACF;;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,sSAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,8TAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM,WAAW,aAAa,OAAO,CAAC;YAEtC,IAAI,CAAC,UAAU;gBACb,oCAAoC;gBACpC,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,IAAI;gBACF,MAAM,aAAa,KAAK,KAAK,CAAC;gBAE9B,IAAI,CAAC,WAAW,eAAe,IAAI,CAAC,aAAa,QAAQ,CAAC,WAAW,IAAI,GAAG;oBAC1E,uDAAuD;oBACvD,OAAO,IAAI,CAAC;oBACZ;gBACF;gBAEA,QAAQ;YACV,EAAE,OAAO,OAAO;gBACd,yCAAyC;gBACzC,aAAa,UAAU,CAAC;gBACxB,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,aAAa;QACf;mCAAG;QAAC;QAAQ;QAAc;KAAW;IAErC,qDAAqD;IACrD,IAAI,WAAW;QACb,qBACE,8VAAC;YAAI,WAAU;sBACb,cAAA,8VAAC;gBAAI,WAAU;;kCACb,8VAAC;wBAAI,WAAU;;;;;;kCACf,8VAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAIrC;IAEA,qDAAqD;IACrD,IAAI,CAAC,QAAQ,CAAC,aAAa,QAAQ,CAAC,KAAK,IAAI,GAAG;QAC9C,qBACE,8VAAC;YAAI,WAAU;sBACb,cAAA,8VAAC;gBAAI,WAAU;;kCACb,8VAAC;wBAAI,WAAU;kCAAgB;;;;;;kCAC/B,8VAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,8VAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAGlC,8VAAC;wBAAI,WAAU;;0CACb,8VAAC;gCACC,SAAS,IAAM,OAAO,IAAI,CAAC;gCAC3B,WAAU;0CACX;;;;;;0CAGD,8VAAC;gCACC,SAAS,IAAM,OAAO,IAAI,CAAC;gCAC3B,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;IAOX;IAEA,gDAAgD;IAChD,qBAAO;kBAAG;;AACZ;GAjFwB;;QAOP,sSAAA,CAAA,YAAS;;;KAPF"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///Users/muhammadghally/Documents/eventhub-beta/eventhub-beta/app/%28default%29/payment/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport ProtectedRoute from '@/components/ProtectedRoute';\nimport Image from 'next/image';\n\ninterface TicketType {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n}\n\ninterface PaymentData {\n  eventId: string;\n  eventName: string;\n  eventDate: string;\n  eventLocation: string;\n  tickets: TicketType[];\n  subtotal: number;\n  discount: number;\n  total: number;\n  voucherCode?: string;\n  paymentDeadline?: string;\n}\n\nfunction PaymentPageContent() {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const [paymentData, setPaymentData] = useState<PaymentData | null>(null);\n  const [proofOfPayment, setProofOfPayment] = useState<File | null>(null);\n  const [previewUrl, setPreviewUrl] = useState<string>('');\n  const [uploading, setUploading] = useState(false);\n  const [step, setStep] = useState<'instructions' | 'upload' | 'confirmation'>('instructions');\n  const [timeRemaining, setTimeRemaining] = useState<number>(0);\n\n  // Bank account details\n  const bankDetails = {\n    bankName: 'Bank Central Asia (BCA)',\n    accountNumber: '1234567890',\n    accountName: 'EventHub Indonesia',\n    swiftCode: 'CENAIDJA'\n  };\n\n  useEffect(() => {\n    // Get payment data from URL params or localStorage\n    const data = searchParams.get('data');\n    if (data) {\n      try {\n        const parsedData = JSON.parse(decodeURIComponent(data));\n        setPaymentData(parsedData);\n        \n        // Calculate initial time remaining\n        if (parsedData.paymentDeadline) {\n          const deadlineTime = new Date(parsedData.paymentDeadline).getTime();\n          const currentTime = Date.now();\n          const remainingSeconds = Math.max(0, Math.floor((deadlineTime - currentTime) / 1000));\n          setTimeRemaining(remainingSeconds);\n        } else {\n          // Fallback: 2 hours from now\n          setTimeRemaining(2 * 60 * 60);\n        }\n      } catch (error) {\n        console.error('Error parsing payment data:', error);\n        router.push('/');\n      }\n    } else {\n      // Fallback to localStorage or redirect\n      const storedData = localStorage.getItem('pendingPayment');\n      if (storedData) {\n        const parsedStoredData = JSON.parse(storedData);\n        setPaymentData(parsedStoredData);\n        \n        // Calculate initial time remaining\n        if (parsedStoredData.paymentDeadline) {\n          const deadlineTime = new Date(parsedStoredData.paymentDeadline).getTime();\n          const currentTime = Date.now();\n          const remainingSeconds = Math.max(0, Math.floor((deadlineTime - currentTime) / 1000));\n          setTimeRemaining(remainingSeconds);\n        } else {\n          // Fallback: 2 hours from now\n          setTimeRemaining(2 * 60 * 60);\n        }\n      } else {\n        router.push('/');\n      }\n    }\n  }, [searchParams, router]);\n\n  // Countdown timer effect\n  useEffect(() => {\n    if (timeRemaining <= 0) return;\n\n    const timer = setInterval(() => {\n      setTimeRemaining(prev => {\n        if (prev <= 0) {\n          clearInterval(timer);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeRemaining]);\n\n  const formatTime = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      // Validate file type\n      if (!file.type.match(/^image\\/(jpeg|jpg|png)$/)) {\n        alert('Please upload only JPG, JPEG, or PNG files');\n        return;\n      }\n\n      // Validate file size (max 5MB)\n      if (file.size > 5 * 1024 * 1024) {\n        alert('File size must be less than 5MB');\n        return;\n      }\n\n      setProofOfPayment(file);\n      \n      // Create preview URL\n      const url = URL.createObjectURL(file);\n      setPreviewUrl(url);\n    }\n  };\n\n  const removeFile = () => {\n    if (previewUrl) {\n      URL.revokeObjectURL(previewUrl);\n    }\n    setProofOfPayment(null);\n    setPreviewUrl('');\n  };\n\n  const handleSubmitPayment = async () => {\n    if (!proofOfPayment || !paymentData) {\n      alert('Please upload proof of payment');\n      return;\n    }\n\n    setUploading(true);\n\n    try {\n      // Simulate upload process (replace with actual API call)\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Create transaction record\n      const transaction = {\n        id: Date.now().toString(),\n        eventId: paymentData.eventId,\n        eventName: paymentData.eventName,\n        eventDate: paymentData.eventDate,\n        eventLocation: paymentData.eventLocation,\n        tickets: paymentData.tickets,\n        total: paymentData.total,\n        status: 'pending_verification',\n        paymentMethod: 'Bank Transfer',\n        proofOfPayment: proofOfPayment.name,\n        submittedAt: new Date().toISOString(),\n        voucherCode: paymentData.voucherCode\n      };\n\n      // Store transaction (in real app, this would be sent to backend)\n      const existingTransactions = JSON.parse(localStorage.getItem('userTransactions') || '[]');\n      existingTransactions.push(transaction);\n      localStorage.setItem('userTransactions', JSON.stringify(existingTransactions));\n\n      // Clear pending payment\n      localStorage.removeItem('pendingPayment');\n\n      setStep('confirmation');\n    } catch (error) {\n      console.error('Error submitting payment:', error);\n      alert('Error submitting payment. Please try again.');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    alert('Copied to clipboard!');\n  };\n\n  if (!paymentData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading payment details...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (step === 'confirmation') {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-8\">\n        <div className=\"max-w-2xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-white rounded-xl shadow-lg p-8 text-center\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Payment Submitted Successfully!</h1>\n            <p className=\"text-gray-600 mb-6\">\n              Thank you for your payment. We have received your proof of payment and will verify it within 24 hours.\n              You will receive a confirmation email once your payment is approved.\n            </p>\n            <div className=\"space-y-4\">\n              <button\n                onClick={() => router.push('/transactions')}\n                className=\"w-full px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                View My Transactions\n              </button>\n              <button\n                onClick={() => router.push('/')}\n                className=\"w-full px-6 py-3 border border-gray-300 text-gray-700 font-medium rounded-lg hover:bg-gray-50 transition-colors\"\n              >\n                Back to Events\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <button\n            onClick={() => router.back()}\n            className=\"flex items-center text-gray-600 hover:text-gray-900 mb-4\"\n          >\n            <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n            Back to Checkout\n          </button>\n\n          {/* Payment Timer */}\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-lg font-semibold text-red-800\">⏰ Payment Deadline</h2>\n                <p className=\"text-red-700\">Upload payment proof within the time limit</p>\n              </div>\n              <div className=\"text-right\">\n                <div className={`text-2xl font-bold ${timeRemaining <= 300 ? 'text-red-600' : timeRemaining <= 1800 ? 'text-yellow-600' : 'text-green-600'}`}>\n                  {formatTime(timeRemaining)}\n                </div>\n                <div className=\"text-sm text-red-600\">Time Remaining</div>\n              </div>\n            </div>\n            {timeRemaining <= 0 && (\n              <div className=\"mt-3 p-3 bg-red-100 border border-red-300 rounded\">\n                <p className=\"text-red-800 font-semibold\">⚠️ Payment time has expired!</p>\n                <p className=\"text-red-700 text-sm\">Please return to checkout to book tickets again.</p>\n              </div>\n            )}\n          </div>\n\n          <h1 className=\"text-3xl font-bold text-gray-900\">Complete Your Payment</h1>\n          <p className=\"text-gray-600 mt-2\">Follow the instructions below to complete your ticket purchase</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Payment Instructions */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {step === 'instructions' && (\n              <div className=\"bg-white rounded-xl shadow-lg p-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Payment Instructions</h2>\n                \n                {/* Step 1 */}\n                <div className=\"flex items-start space-x-4 mb-6\">\n                  <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center font-semibold text-sm\">\n                    1\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Transfer to Bank Account</h3>\n                    <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700\">Bank Name</label>\n                          <div className=\"flex items-center justify-between bg-white p-2 rounded border\">\n                            <span className=\"font-mono\">{bankDetails.bankName}</span>\n                            <button\n                              onClick={() => copyToClipboard(bankDetails.bankName)}\n                              className=\"text-blue-600 hover:text-blue-700 text-sm\"\n                            >\n                              Copy\n                            </button>\n                          </div>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700\">Account Number</label>\n                          <div className=\"flex items-center justify-between bg-white p-2 rounded border\">\n                            <span className=\"font-mono\">{bankDetails.accountNumber}</span>\n                            <button\n                              onClick={() => copyToClipboard(bankDetails.accountNumber)}\n                              className=\"text-blue-600 hover:text-blue-700 text-sm\"\n                            >\n                              Copy\n                            </button>\n                          </div>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700\">Account Name</label>\n                          <div className=\"flex items-center justify-between bg-white p-2 rounded border\">\n                            <span className=\"font-mono\">{bankDetails.accountName}</span>\n                            <button\n                              onClick={() => copyToClipboard(bankDetails.accountName)}\n                              className=\"text-blue-600 hover:text-blue-700 text-sm\"\n                            >\n                              Copy\n                            </button>\n                          </div>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700\">Total Amount</label>\n                          <div className=\"flex items-center justify-between bg-white p-2 rounded border\">\n                            <span className=\"font-mono font-bold text-lg text-green-600\">\n                              Rp {paymentData.total.toLocaleString()}\n                            </span>\n                            <button\n                              onClick={() => copyToClipboard(paymentData.total.toString())}\n                              className=\"text-blue-600 hover:text-blue-700 text-sm\"\n                            >\n                              Copy\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mt-2\">\n                      Please transfer the exact amount to the account above. Include your name in the transfer description.\n                    </p>\n                  </div>\n                </div>\n\n                {/* Step 2 */}\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center font-semibold text-sm\">\n                    2\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Upload Proof of Payment</h3>\n                    <p className=\"text-sm text-gray-600 mb-4\">\n                      After making the transfer, click the button below to upload your payment receipt or screenshot.\n                    </p>\n                    <button\n                      onClick={() => setStep('upload')}\n                      className=\"px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors\"\n                    >\n                      I've Made the Payment - Upload Proof\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {step === 'upload' && (\n              <div className=\"bg-white rounded-xl shadow-lg p-6\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h2 className=\"text-xl font-semibold text-gray-900\">Upload Proof of Payment</h2>\n                  <button\n                    onClick={() => setStep('instructions')}\n                    className=\"text-gray-500 hover:text-gray-700\"\n                  >\n                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  </button>\n                </div>\n\n                <div className=\"space-y-6\">\n                  {/* File Upload Area */}\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                    {proofOfPayment ? (\n                      <div className=\"space-y-4\">\n                        <div className=\"relative inline-block\">\n                          <img\n                            src={previewUrl}\n                            alt=\"Proof of payment preview\"\n                            className=\"max-w-full max-h-64 rounded-lg shadow-md\"\n                          />\n                          <button\n                            onClick={removeFile}\n                            className=\"absolute -top-2 -right-2 w-6 h-6 bg-red-500 text-white rounded-full flex items-center justify-center hover:bg-red-600\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-900\">{proofOfPayment.name}</p>\n                          <p className=\"text-sm text-gray-500\">\n                            Size: {(proofOfPayment.size / 1024 / 1024).toFixed(2)} MB\n                          </p>\n                        </div>\n                      </div>\n                    ) : (\n                      <div>\n                        <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                        </svg>\n                        <p className=\"text-lg font-medium text-gray-900 mb-2\">Upload your payment receipt</p>\n                        <p className=\"text-sm text-gray-600 mb-4\">\n                          Accepted formats: JPG, JPEG, PNG (Max size: 5MB)\n                        </p>\n                        <input\n                          type=\"file\"\n                          accept=\".jpg,.jpeg,.png\"\n                          onChange={handleFileUpload}\n                          className=\"hidden\"\n                          id=\"payment-proof\"\n                          disabled={timeRemaining <= 0}\n                        />\n                        <label\n                          htmlFor={timeRemaining <= 0 ? undefined : \"payment-proof\"}\n                          className={`inline-flex items-center px-6 py-3 font-medium rounded-lg transition-colors ${\n                            timeRemaining <= 0 \n                              ? 'bg-gray-400 text-gray-600 cursor-not-allowed' \n                              : 'bg-blue-600 text-white hover:bg-blue-700 cursor-pointer'\n                          }`}\n                        >\n                          <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                          </svg>\n                          {timeRemaining <= 0 ? 'Time Expired' : 'Choose File'}\n                        </label>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Guidelines */}\n                  <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n                    <h3 className=\"font-semibold text-amber-800 mb-2\">Upload Guidelines:</h3>\n                    <ul className=\"text-sm text-amber-700 space-y-1\">\n                      <li>• Ensure the receipt shows the transfer amount and bank details clearly</li>\n                      <li>• Make sure the image is not blurry and all text is readable</li>\n                      <li>• Include the transaction reference number if available</li>\n                      <li>• File size should not exceed 5MB</li>\n                    </ul>\n                  </div>\n\n                  {/* Submit Button */}\n                  {proofOfPayment && (\n                    <button\n                      onClick={handleSubmitPayment}\n                      disabled={uploading || timeRemaining <= 0}\n                      className=\"w-full px-6 py-3 bg-green-600 text-white font-medium rounded-lg hover:bg-green-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                    >\n                      {timeRemaining <= 0 ? (\n                        'Payment Time Expired'\n                      ) : uploading ? (\n                        <div className=\"flex items-center justify-center\">\n                          <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                          Submitting Payment...\n                        </div>\n                      ) : (\n                        'Submit Payment Proof'\n                      )}\n                    </button>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Order Summary */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6 h-fit\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Order Summary</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-medium text-gray-900\">{paymentData.eventName}</h4>\n                <p className=\"text-sm text-gray-600\">{paymentData.eventDate}</p>\n                <p className=\"text-sm text-gray-600\">{paymentData.eventLocation}</p>\n              </div>\n\n              <div className=\"border-t pt-4\">\n                <h5 className=\"font-medium text-gray-900 mb-2\">Tickets</h5>\n                {paymentData.tickets.map((ticket) => (\n                  <div key={ticket.id} className=\"flex justify-between text-sm mb-2\">\n                    <span>{ticket.name} x{ticket.quantity}</span>\n                    <span>Rp {(ticket.price * ticket.quantity).toLocaleString()}</span>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"border-t pt-4 space-y-2\">\n                <div className=\"flex justify-between text-sm\">\n                  <span>Subtotal</span>\n                  <span>Rp {paymentData.subtotal.toLocaleString()}</span>\n                </div>\n                {paymentData.discount > 0 && (\n                  <div className=\"flex justify-between text-sm text-green-600\">\n                    <span>Discount {paymentData.voucherCode && `(${paymentData.voucherCode})`}</span>\n                    <span>-Rp {paymentData.discount.toLocaleString()}</span>\n                  </div>\n                )}\n                <div className=\"flex justify-between font-semibold text-lg pt-2 border-t\">\n                  <span>Total</span>\n                  <span>Rp {paymentData.total.toLocaleString()}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction PaymentPage() {\n  return (\n    <ProtectedRoute allowedRoles={['user']}>\n      <Suspense fallback={\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p className=\"text-gray-600\">Loading...</p>\n          </div>\n        </div>\n      }>\n        <PaymentPageContent />\n      </Suspense>\n    </ProtectedRoute>\n  );\n}\n\nexport default PaymentPage;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}